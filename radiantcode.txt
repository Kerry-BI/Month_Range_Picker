<div class="popup-background" id="popup-background"></div>

    <div class="popup" id="popup">
            <p>Error, invalid dates selected</p>
            <button id="closePopup">Close</button>
    </div>

    <div class="row" id="Tile" style="width: 99%; height: 85%;">
    <div id="Column3" style="padding: 0px 0px 0px 0px"> 
        <div class="month">
          <ul>  
            <li id="NextButton" class="next">&#10095;</li>
            <li id="nextbuttonText" style="font-size:18px">2023</li>
          </ul>
        </div>

        <div class="months">
          <div class="monthsdiv" id="right_1">Jan
            <div class="blob"></div>
            <div class="fakeblob"></div></div>
           </div>
          <div class="monthsdiv" id="right_2">Feb</div>
          <div class="monthsdiv" id="right_3">Mar</div>
          <div class="monthsdiv" id="right_4">Apr</div>
          <div class="monthsdiv" id="right_5">May</div>
          <div class="monthsdiv" id="right_6">Jun</div>
          <div class="monthsdiv" id="right_7">Jul</div>
          <div class="monthsdiv" id="right_8">Aug</div>
          <div class="monthsdiv" id="right_9">Sep</div>
          <div class="monthsdiv" id="right_10">Oct</div>
          <div class="monthsdiv" id="right_11">Nov</div>
          <div class="monthsdiv" id="right_12">Dec</div>
            
        </div>
      </div> 

      <div id="Column2"> 
        <div class="month">
          <ul>
            <li id="PreviousButton" class="prev">&#10094;</li>
            <li id = "PreviousButtonText" style="font-size:18px">2022</span></li>
          </ul>
        </div>
  
        <div class="months">
          <div class="monthsdiv" id="left_1">Jan</div>
          <div class="monthsdiv" id="left_2">Feb</div>
          <div class="monthsdiv" id="left_3">Mar</div>
          <div class="monthsdiv" id="left_4">Apr</div>
          <div class="monthsdiv" id="left_5">May</div>
          <div class="monthsdiv" id="left_6">Jun</div>
          <div class="monthsdiv" id="left_7">Jul</div>
          <div class="monthsdiv" id="left_8">Aug</div>
          <div class="monthsdiv" id="left_9">Sep</div>
          <div class="monthsdiv" id="left_10">Oct</div>
          <div class="monthsdiv" id="left_11">Nov</div>
          <div class="monthsdiv" id="left_12">Dec</div>
        </div>
      </div> 

      <div id="Column4"> 
        <div class="buttonrow" style="width: 99%; height: 12%;">
          <div id="options">
            <b>Options</b>
          </div> 
            <div id="_YTDButton" class="button">YTD</div>
            <div id="DETButton" class="button">Detail</div>
            <div id="MATButton" class="button">MAT</div>
            <div id="QTDButton" class="button">QTD</div>
            <div id="MQTButton" class="button">MQT</div>
            <div id="MonthButton" class="button">PTD</div>
          </div>
        </div> 
    </div> 
  </div>

  <div id="TileBottom" style="width: 99%; height: 10%;"> 
    <div id ="displayDates"> Select Dates... </div>
    <div id="Apply"><button id="ApplyButton">Apply</button></div> 
    <div id="reset"><button id="ResetButton">Reset</button></div> 
  </div>









<style>
    /*style of column 3 (apply button, time options)*/
    /* Styles for the popup */
    .popup {
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        text-align: center;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    }
    .popup-background {
      display: none;
      position: fixed;
      top: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      background-color: #474747;
      opacity: 0;
      transition: all 0.5 linear;
      -webkit-transition: same!
      -moz-transition: same!
      -o-transition: same!
    }
    .popup-background.visible {
      display: block;
      opacity: .6;
    }

    /*style for Apply button*/
    #ApplyButton{
      background-color: #046d9e;
      Color: white;
    }

    #displayDates{
      text-align: center;
      flex: 1;
      font-weight: bold;
    }

    #ApplyButton, #ResetButton{
        margin-left: 10px;   
        margin-right: 20px;
        width: 80%;
        border-radius: 4px;
    }

    #options{
      padding: 3% 10%;
      text-align: center;
      height: 100%;
    }

    .button
    {
      display: inline-block;
      text-align: center;
      width: 100%;
      height: 100%;
      background-color: white;
      font-weight: normal;
    }

    .button.active
    {
    background-color: #046d9e;
    color: white;
    }
   

    #buttonrow
    {
        width:100%;
        text-align: center;
      
    }

    #Tile {
      border-style: solid;
      border-radius: 3px;
      border: 1px solid black;
  }

  #TileBottom {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-style: solid;
    background-color: #ffffff;
    border-radius: 3px;
    border: 1px solid black;
    bottom: 0;
}

  #Column2 {
      align-items: center;
      border-left: 1px solid #FF0000;
      float: right;
      text-align: center;
      width: 40%;
      height: 100%;
      border-color: black;
      background-color: white !important;
      
  }
   #Column3 {
      float: right;
      border-left: 1px solid #FF0000;
      width: 40%;
      height: 100%;
      border-color: black;
      background-color: white !important;
      
  }

  #Column4 {
    /*width: 19.8%;*/
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    justify-content: center;
    height: 100%;
    border-color: black;
    background-color: white !important;
    
}


    ul {list-style-type: none;}
body {font-family: Verdana, sans-serif;}

/* Month header */
.month {
  /* padding: 20px 40px;*/
  width: 100%;
  height: 15%;
  background: #046d9e;
  text-align: center;
}

/* Month list */
.month ul {
  margin: 0;
  padding: 0;
}

.month ul li {
  color: white;
  font-size: 20px;
  text-transform: uppercase;
  letter-spacing: 3px;
  padding-top: 3%;
}

/* Previous button inside month header */
.month .prev {
  float: left;
  padding-left: 20%;
}

/* Next button */
.month .next {
  float: right;
  padding-right: 20%;
}

.blob {
  filter: blur(40px);
  position: absolute;
  z-index: -1;
  top: 0;
  opacity: 0;
  left: 0;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background: rgb(255,0,0);
  transition: all 300ms ease-in-out;
}

.fakeblob {
  display: hidden;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  width: 20px;
  height: 20px;
  border-radius: 50%;
}


/* Days (1-31) */
.months {
    background: #fff;
    height: 75%;
    margin: 5%;
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    justify-content: center;
}

.monthsdiv {
  list-style-type: none;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 33%;
  height: 25%;
  text-align: center;
  margin-bottom: 2px;
  font-weight: bold;
  font-size:14px;
  color: #777;
  backdrop-filter: blur(40px);
  transition: all 300ms ease-in-out;
}

.monthsdiv:hover > .inner {
  background: rgb(26,26,26, 0.6);
  backdrop-filter: blur(40px);
}


/* Highlight the "current" day */
.monthsdiv.active {
  background-color: blue !important; 
  color: white !important;
}

.monthsdiv.periodSelectEndDark {
  background-color: #046d9e !important; 
  color: white !important;
  border-radius: 0px 15px 15px 0px;
}

.monthsdiv.periodSelectStartLight {
  background-color: #046d9e !important; 
  color: white !important;
  border-radius: 15px 0px 0px 15px;
}

.monthsdiv.periodSelectStartAndEndDark {
  background-color: #046d9e !important; 
  color: white !important;
}

.monthsdiv.periodSelectBetweenLight {
  background-color: #2ebcff !important; 
  color: white !important;
}

.monthsdiv.periodSelectStartDark {
  background-color: #046d9e !important; 
  color: white !important;
  border-radius: 15px 0px 0px 15px;
}
</style>



const all = document.querySelectorAll(".monthsdiv");

const months = document.querySelectorAll(".months");
months[1].addEventListener("mousemove", (ev) => {
  
  all.forEach((e) => {
    const blob = e.querySelector(".blob");
    const fblob = e.querySelector(".fakeblob");
    const rec = fblob.getBoundingClientRect();
    blob.style.opacity = "1";
  
    blob.animate(
      [
        {
          transform: `translate(${
            (ev.clientX - rec.left) - (rec.width / 2)
          }px,${(ev.clientY - rec.top) - (rec.height / 2)}px)`
        }
      ],
      {
        duration: 300,
        fill: "forwards"
      }
    );
  });
});



